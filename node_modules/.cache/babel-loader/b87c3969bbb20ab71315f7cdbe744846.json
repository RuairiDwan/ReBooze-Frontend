{"ast":null,"code":"var _jsxFileName = \"/Users/ruairidwan/Documents/rebooze-frontend/src/components/BeerList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport beerSearch from '../actions/beerSearch';\n\nclass BeerList extends Component {\n  componentDidMount() {\n    this.props.beerSearch('');\n  }\n\n  render() {\n    const {\n      beers,\n      searchTerm\n    } = this.props;\n    console.log('Beer list');\n    console.log(beers);\n    const showingBeers = searchTerm === '' & this.props.beers ? beers : beers && beers.filter(c => c.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.searchTerm,\n      placeholder: \"Search Beers\",\n      onChange: event => this.props.beerSearch(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, this.props.beers && showingBeers.map(beer => /*#__PURE__*/React.createElement(\"li\", {\n      key: beer.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, beer.name, beer.id)))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  beers\n}) => {\n  return {\n    beers: beers.beers,\n    searchTerm: beers.searchTerm\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    beerSearch: data => {\n      dispatch(beerSearch(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BeerList);","map":{"version":3,"sources":["/Users/ruairidwan/Documents/rebooze-frontend/src/components/BeerList.js"],"names":["React","Component","connect","beerSearch","BeerList","componentDidMount","props","render","beers","searchTerm","console","log","showingBeers","filter","c","name","toLowerCase","includes","event","target","value","map","beer","id","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE7BI,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,KAAL,CAAWH,UAAX,CAAsB,EAAtB;AACH;;AACDI,EAAAA,MAAM,GAAI;AAEN,UAAM;AAAEC,MAAAA,KAAF;AAAUC,MAAAA;AAAV,QAAwB,KAAKH,KAAnC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,UAAMI,YAAY,GAAIH,UAAU,KAAK,EAAf,GAAoB,KAAKH,KAAL,CAAWE,KAA/B,GACpBA,KADoB,GAEpBA,KAAK,IAAIA,KAAK,CAACK,MAAN,CAAcC,CAAD,IACpBA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BR,UAAU,CAACO,WAAX,EAA9B,CADO,CAFX;AAMA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWG,UAFtB;AAGI,MAAA,WAAW,EAAC,cAHhB;AAII,MAAA,QAAQ,EAAGS,KAAD,IAAW,KAAKZ,KAAL,CAAWH,UAAX,CAAsBe,KAAK,CAACC,MAAN,CAAaC,KAAnC,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKd,KAAL,CAAWE,KAAX,IAAoBI,YAAY,CAACS,GAAb,CAAkBC,IAAD,iBAClC;AAAI,MAAA,GAAG,EAAIA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACP,IADV,EAEKO,IAAI,CAACC,EAFV,CADiB,CADrB,CADJ,CATJ,CADJ;AA0BE;;AA3CuB;;AA+CjC,MAAMC,eAAe,GAAG,CAAC;AAAChB,EAAAA;AAAD,CAAD,KAAa;AAEjC,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADV;AAEHC,IAAAA,UAAU,EAAED,KAAK,CAACC;AAFf,GAAP;AAMH,CARD;;AAUA,MAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLvB,IAAAA,UAAU,EAAGwB,IAAD,IAAU;AAACD,MAAAA,QAAQ,CAACvB,UAAU,CAACwB,IAAD,CAAX,CAAR;AAA2B;AAD7C,GAAP;AAGD,CAJH;;AAMA,eAAezB,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport beerSearch from '../actions/beerSearch'\n\nclass BeerList extends Component {\n\n    componentDidMount () {\n        this.props.beerSearch('')\n    }\n    render () {\n\n        const { beers , searchTerm} = this.props\n        console.log('Beer list')\n        console.log(beers)\n\n        const showingBeers =  searchTerm === '' & this.props.beers\n        ? beers\n        : beers && beers.filter((c) => (\n            c.name.toLowerCase().includes(searchTerm.toLowerCase())\n        ))\n   \n        return (\n            <div>\n                <div>\n                    <input\n                        type='text'\n                        value={this.props.searchTerm}\n                        placeholder='Search Beers'\n                        onChange={(event) => this.props.beerSearch(event.target.value)}\n                    />\n                </div>\n                <div>\n                    <ol>\n                    {this.props.beers && showingBeers.map((beer) => (\n                        <li key = {beer.id}>\n                            {beer.name}\n                            {beer.id}\n                        </li>\n                        )\n                        )}\n                    </ol>\n                </div>\n            </div>\n\n\n\n        \n        )}\n\n}\n\nconst mapStateToProps = ({beers}) => {\n\n    return {\n        beers: beers.beers,\n        searchTerm: beers.searchTerm\n\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      beerSearch: (data) => {dispatch(beerSearch(data))}\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BeerList)"]},"metadata":{},"sourceType":"module"}