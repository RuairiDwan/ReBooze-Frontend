{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alphadrives\\\\source\\\\repos\\\\rebooze-frontend\\\\src\\\\components\\\\Callback.js\";\nimport React, { Component, useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport retrieveUserDataAsync from '../actions/users/retrieveUserDataAsync';\nimport { useAuth0, auth0 } from \"@auth0/auth0-react\";\nimport Cookies from 'universal-cookie';\nimport { useHistory } from 'react-router-dom';\n\nconst Callback = props => {\n  const {\n    user,\n    isAuthenticated,\n    getAccessTokenSilently\n  } = useAuth0();\n  const history = useHistory();\n\n  const login = async () => {\n    try {\n      console.log(\"In async function----------------------------------------------\");\n      const token = await getAccessTokenSilently({\n        audience: 'https://rebooze-login',\n        scope: \"get:my-ratings\"\n      });\n      cookies.set('JWT', token, {\n        path: '/'\n      });\n      console.log(token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleNavigate = useCallback(() => history.push('/'), [history]);\n  console.log(\"The user is\");\n  console.log(isAuthenticated);\n  isAuthenticated && login();\n  const cookies = new Cookies();\n  console.log(\"The JWT is :\");\n  console.log(cookies.get('JWT'));\n  typeof user !== 'string' && isAuthenticated && props.retrieveUserData({\n    \"name\": user.given_name,\n    \"email\": user.email\n  });\n\n  if (isAuthenticated) {\n    return handleNavigate;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Callback Function\");\n};\n\nconst mapStateToProps = ({\n  user\n}) => {\n  return {\n    user: user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    retrieveUserData: data => {\n      dispatch(retrieveUserDataAsync(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Callback);","map":{"version":3,"sources":["C:/Users/Alphadrives/source/repos/rebooze-frontend/src/components/Callback.js"],"names":["React","Component","useEffect","useState","useCallback","connect","retrieveUserDataAsync","useAuth0","auth0","Cookies","useHistory","Callback","props","user","isAuthenticated","getAccessTokenSilently","history","login","console","log","token","audience","scope","cookies","set","path","e","error","handleNavigate","push","get","retrieveUserData","given_name","email","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,WAAhD,QAAmE,OAAnE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,oBAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,eAAR;AAAyBC,IAAAA;AAAzB,MAAoDR,QAAQ,EAAlE;AACA,QAAMS,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,KAAK,GAAG,YAAY;AACtB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iEAAZ;AACA,YAAMC,KAAK,GAAG,MAAML,sBAAsB,CAAC;AACvCM,QAAAA,QAAQ,EAAE,uBAD6B;AAEvCC,QAAAA,KAAK,EAAE;AAFgC,OAAD,CAA1C;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,KAAnB,EAA0B;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAA1B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KARD,CAQE,OAAOM,CAAP,EAAU;AACRR,MAAAA,OAAO,CAACS,KAAR,CAAcD,CAAd;AACH;AACJ,GAZD;;AAcA,QAAME,cAAc,GAAGxB,WAAW,CAAC,MAAMY,OAAO,CAACa,IAAR,CAAa,GAAb,CAAP,EAA0B,CAACb,OAAD,CAA1B,CAAlC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ;AAEAA,EAAAA,eAAe,IAAIG,KAAK,EAAxB;AAEA,QAAMM,OAAO,GAAG,IAAId,OAAJ,EAAhB;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACO,GAAR,CAAY,KAAZ,CAAZ;AAGA,SAAOjB,IAAP,KAAgB,QAAhB,IAA4BC,eAA5B,IAA+CF,KAAK,CAACmB,gBAAN,CAAuB;AAClE,YAAQlB,IAAI,CAACmB,UADqD;AAElE,aAASnB,IAAI,CAACoB;AAFoD,GAAvB,CAA/C;;AAOA,MAAInB,eAAJ,EAAqB;AACjB,WAAOc,cAAP;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAKH,CAhDD;;AAkDA,MAAMM,eAAe,GAAG,CAAC;AAACrB,EAAAA;AAAD,CAAD,KAAY;AAEhC,SAAO;AACLA,IAAAA,IAAI,EAAEA;AADD,GAAP;AAGD,CALH;;AAQE,MAAMsB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLL,IAAAA,gBAAgB,EAAGM,IAAD,IAAU;AAACD,MAAAA,QAAQ,CAAC9B,qBAAqB,CAAC+B,IAAD,CAAtB,CAAR;AAAsC;AAD9D,GAAP;AAGD,CAJD;;AAMF,eAAehC,OAAO,CAAC6B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxB,QAA7C,CAAf","sourcesContent":["import React, { Component, useEffect, useState, useCallback } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport retrieveUserDataAsync from '../actions/users/retrieveUserDataAsync';\r\nimport { useAuth0, auth0 } from \"@auth0/auth0-react\";\r\nimport Cookies from 'universal-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Callback = (props) => {\r\n\r\n    const { user, isAuthenticated, getAccessTokenSilently } = useAuth0()\r\n    const history = useHistory();\r\n\r\n    const login = async () => {\r\n        try {\r\n            console.log(\"In async function----------------------------------------------\")\r\n            const token = await getAccessTokenSilently({\r\n                audience: 'https://rebooze-login',\r\n                scope: \"get:my-ratings\"\r\n            });\r\n            cookies.set('JWT', token, { path: '/' });\r\n            console.log(token)\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    const handleNavigate = useCallback(() => history.push('/'), [history]);\r\n\r\n    console.log(\"The user is\")\r\n    console.log(isAuthenticated)\r\n\r\n    isAuthenticated && login()\r\n\r\n    const cookies = new Cookies();\r\n    \r\n    console.log(\"The JWT is :\")\r\n    console.log(cookies.get('JWT'));\r\n\r\n\r\n    typeof user !== 'string' && isAuthenticated && props.retrieveUserData({\r\n        \"name\": user.given_name,\r\n        \"email\": user.email\r\n    })\r\n\r\n    \r\n\r\n    if (isAuthenticated) {\r\n        return handleNavigate\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Callback Function\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({user}) => {\r\n\r\n    return {\r\n      user: user\r\n    }\r\n  }\r\n  \r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      retrieveUserData: (data) => {dispatch(retrieveUserDataAsync(data))}\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Callback)\r\n"]},"metadata":{},"sourceType":"module"}